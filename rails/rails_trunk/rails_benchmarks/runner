#!/bin/bash
set -e

while ! exec 6<>/dev/tcp/${POSTGRES_PORT_5432_TCP_ADDR}/${POSTGRES_PORT_5432_TCP_PORT}; do
  echo "$(date) - still trying to connect to Postgres server"
  sleep 1
done

while ! exec 6<>/dev/tcp/${MYSQL_PORT_3306_TCP_ADDR}/${MYSQL_PORT_3306_TCP_PORT}; do
  echo "$(date) - still trying to connect to Mysql server"
  sleep 1
done

dropdb --if-exists -h "$POSTGRES_PORT_5432_TCP_ADDR" -p "$POSTGRES_PORT_5432_TCP_PORT" -U postgres rubybench
createdb -h "$POSTGRES_PORT_5432_TCP_ADDR" -p "$POSTGRES_PORT_5432_TCP_PORT" -U postgres rubybench
echo "DROP DATABASE IF EXISTS rubybench" | mysql -u root -h "$MYSQL_PORT_3306_TCP_ADDR" -P "MYSQL_PORT_3306_TCP_PORT"
echo "CREATE DATABASE rubybench" | mysql -u root -h "$MYSQL_PORT_3306_TCP_ADDR" -P "MYSQL_PORT_3306_TCP_PORT"

echo "gem: --no-ri --no-rdoc" > ~/.gemrc
gem update bundler

cd /ruby-bench-suite/rails
git pull --rebase origin master

if [ "$INCLUDE_PATTERNS" ]; then
  PATTERNS="--pattern $INCLUDE_PATTERNS"
fi

cd /rails
git pull --rebase origin master

if [ -z "$RAILS_COMMIT_HASH" ]; then
  echo "Running benchmarks using latest Rails commit"
else
  echo "Running benchmarks using Rails commit $RAILS_COMMIT_HASH"
  git reset --hard $RAILS_COMMIT_HASH
  bundle install -j4 --without test job doc
fi

if [[ $(git rev-list --count $RAILS_COMMIT_HASH..51211a94bd7a34d80f2412a7f94fefe7366647a5) -gt 0 ]]; then
  sed -i "s/gem 'rack', github: 'rack\/rack', branch: 'master'/gem 'rack'/g" /ruby-bench-suite/rails/Gemfile
fi

cd /ruby-bench-suite/rails
sed -i "s/gem 'rails', github: 'rails'/gem 'rails', path: '\/rails'/g" Gemfile
bundle install -j4

echo "Running benchmarks with Rails $RAILS_COMMIT_HASH"
cd /ruby-bench-suite/rails/benchmarks
ruby driver.rb $PATTERNS
